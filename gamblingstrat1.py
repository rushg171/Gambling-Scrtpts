# -*- coding: utf-8 -*-
"""gamblingstrat1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KdPwCCrcXwQLXX-ScrSSpb8jgdOsm14L
"""



import random
import math
import matplotlib.pyplot as plt
from statistics import mean

max = 0
wallet = []
cash = 100
bet = [100, 500, 1000, 5000, 10000, 50000, 100000, 500000, 1000000, math.inf]

def winloss():
    wl = [True, False]
    result = random.choice(wl)
    return result

def currentbet():
  global cash
  for i in range(1, 10):
      if bet[i] > cash:
        cb = bet[i-1]
        return cb

def randomCB():
  while(True):
    b = random.choice(bet)
    if b<=cash: return b

def safeBet():
  global cash
  for i in range(1, 10):
      if bet[i]*3 > cash:
        cb = bet[i-1]
        return cb

def runstrat1(n):
  global cash
  global max
  for x in range(n):
    cb = currentbet()
    if winloss(): cash = cash + cb
    else: 
      cash = cash - cb
      if (cash < 100): cash = 100
    wallet.append(cash)
    if cash > max: max = cash
  print("Simulation Complete \n Cash: ",cash, "Max: ", max, "Mean: ", mean(wallet))

def runstrat2(n):
  global cash
  global max
  wallet.append(cash)
  for x in range(n):
    cb = randomCB()
    if winloss(): cash = cash + cb
    else: 
      cash = cash - cb
      if (cash < 100): cash = 100
    wallet.append(cash)
    if cash > max: max = cash
  print("Simulation Complete \n Cash: ",cash, "Max: ", max, "Mean: ", mean(wallet))

def runstrat3(n):
  global cash, max
  wallet.append(cash)
  for x in range(n):
    cb = safeBet()
    if winloss(): cash = cash + cb
    else: 
      cash = cash - cb
      if (cash < 100): cash = 100
    wallet.append(cash)
    if cash > max: max = cash
  print("Simulation Complete \n Cash: ",cash, "Max: ", max, "Mean: ", mean(wallet))

def walletPlot(wallet, title):
  plt.plot(wallet)
  plt.title(title)
  plt.xlabel("Game Number")
  plt.ylabel("Pocket")
  plt.show()

wallet = []
runstrat1(1000)
walletPlot(wallet, "All in")

wallet = []
runstrat2(1000)
walletPlot(wallet, "Random BET")

wallet = []
runstrat3(1000)
walletPlot(wallet, "Safe BET")

